# docker compose up -d 
# docker system prune
# docker-compose down --volumes
networks:
  chessvger_network:
    driver: bridge

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.11
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Ajustez en fonction de la m√©moire disponible
    ports:
      - "9200:9200"  # Elasticsearch API
    volumes:
      - ./data/es_data:/usr/share/elasticsearch/data
    networks:
    - chessvger_network   
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.11
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"  # Kibana UI accessible sur http://localhost:5601
    networks:
      - chessvger_network
    depends_on:
      - elasticsearch
  zipkin:
    image: openzipkin/zipkin:latest
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=http://elasticsearch:9200  # Pointage vers le service Elasticsearch
      - ES_INDEX=zipkin    # Nom de l'index dans Elasticsearch
    container_name: zipkin
    depends_on:
      - elasticsearch
    ports:
      - "9411:9411"
    networks:
      - chessvger_network   
    volumes:
      - ./data:/app/metrics 

  chessvger-backoffice:
    image: chessvger-backoffice:latest
    depends_on:
      - zipkin
      - postgres
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data  
      
  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - chessvger_network

  postgres:
    image: postgres:latest
    container_name: postgres_container
    hostname: db_chessvger
    environment:
      POSTGRES_USER: chessvger
      POSTGRES_PASSWORD: chessvger
      POSTGRES_DB: chessvger
    ports:
      - "5432:5432"
    networks:
      - chessvger_network
    volumes:
      - ./reference/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./data/postgres_data:/var/lib/postgresql/data

  
  # dockfish:
  #   image: registry.gitlab.com/ce72/dockfish:latest 
  #   build:
  #     context: ./dockfish 
  #   ports:
  #     - "8084:8080"
  #   networks:
  #   - chessvger_network


  chessvger-serverapp:
    image: chessvger-serverapp:latest
    depends_on:
      - chessvger-backoffice
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data   
    ports:
      - "8080:8080"

  chessvger-serverapp-admin:
    image: chessvger-serverapp-admin:latest
    depends_on:
      - chessvger-backoffice
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data   
    ports:
      - "8082:8082"

  chessvger-client:
    image: chessvger-client:latest
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    ports:
      - "3000:3000"

  chessvger-client-admin:
    image: chessvger-client-admin:latest
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    ports:
      - "3002:3002"
           


