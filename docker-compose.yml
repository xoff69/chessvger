# docker compose up -d 
# docker system prune
# docker-compose down --volumes
networks:
  chessvger_network:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./data/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  otel-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - "4317:4317"
      - "55680:55680"
      - "8888:8888"
    command: [
      "--config=/etc/otel-collector-config.yaml"
    ]
    volumes:
      - ./data/otel-collector-config.yaml:/etc/otel-collector-config.yaml

  chessvger-backoffice:
    image: chessvger-backoffice:latest
    depends_on:
      - otel-collector
      - postgres
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data  
      
  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - chessvger_network

  postgres:
    image: postgres:latest
    container_name: postgres_container
    hostname: db_chessvger
    environment:
      POSTGRES_USER: chessvger
      POSTGRES_PASSWORD: chessvger
      POSTGRES_DB: chessvger
    ports:
      - "5432:5432"
    networks:
      - chessvger_network
    volumes:
      - ./reference/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./data/postgres_data:/var/lib/postgresql/data

  
  # dockfish:
  #   image: registry.gitlab.com/ce72/dockfish:latest 
  #   build:
  #     context: ./dockfish 
  #   ports:
  #     - "8084:8080"
  #   networks:
  #   - chessvger_network


  chessvger-serverapp:
    image: chessvger-serverapp:latest
    depends_on:
      - chessvger-backoffice
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data   
    ports:
      - "8080:8080"

  chessvger-serverapp-admin:
    image: chessvger-serverapp-admin:latest
    depends_on:
      - chessvger-backoffice
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data   
    ports:
      - "8082:8082"

  chessvger-client:
    image: chessvger-client:latest
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    ports:
      - "3000:3000"

  chessvger-client-admin:
    image: chessvger-client-admin:latest
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - chessvger_network
    ports:
      - "3002:3002"
           


