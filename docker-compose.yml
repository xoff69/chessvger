# docker compose up
# docker system prune
# docker-compose down --volumes
networks:
  chessvger_network:
    driver: bridge

services:

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - chessvger_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - chessvger_network
    volumes:
      - zookeeper_data:/var/lib/zookeeper

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - chessvger_network
    volumes:
      - kafka_data:/var/lib/kafka/data

  postgres:
    image: postgres:latest
    container_name: postgres_container
    hostname: db_chessvger
    environment:
      POSTGRES_USER: chessvger
      POSTGRES_PASSWORD: chessvger
      POSTGRES_DB: chessvger
    ports:
      - "5432:5432"
    networks:
      - chessvger_network
    volumes:
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres_data:/var/lib/postgresql/data
      
  # dockfish:
  #   image: registry.gitlab.com/ce72/dockfish:latest 
  #   build:
  #     context: ./dockfish 
  #   ports:
  #     - "8084:8080"
  #   networks:
  #   - chessvger_network


  chessvger-monitor:
    image: chessvger-monitor:latest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - zookeeper
      - postgres
    networks:
      - chessvger_network

  chessvger-webapp:
    image: chessvger-webapp:latest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - chessvger-monitor
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data   
    ports:
      - "8080:8080"
      
  chessvger-queues:
    image: chessvger-queues:latest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - chessvger-webapp
    networks:
      - chessvger_network
    volumes:
      - ./data:/app/data  

volumes:
  postgres_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local