version: '3.8'

networks:
  chessvger_network:
    driver: bridge

services:
  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - chessvger_network

   
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - chessvger_network

  kafka:
    image:  'confluentinc/cp-kafka:latest'
    container_name: kafka_container
    ports:
      - "9092:9092"
    environment:
      kafka_server: kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - chessvger_network

  postgres:
    image: postgres:latest
    container_name: postgres_container
    hostname: db_chessvger
    environment:
      POSTGRES_USER: chessvger
      POSTGRES_PASSWORD: chessvger
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    networks:
      - chessvger_network
      
  # dockfish:
  #   image: registry.gitlab.com/ce72/dockfish:latest 
  #   build:
  #     context: ./dockfish 
  #   ports:
  #     - "8084:8080"
  #   networks:
  #   - chessvger_network


  chessvger-monitor:
    image: chessvger-monitor:latest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - zookeeper
      - postgres
    networks:
      - chessvger_network