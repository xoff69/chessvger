/*
 * This source file was generated by the Gradle 'init' task
 */

package com.xoff.chessvger.parser.player;

import com.xoff.chessvger.util.Topic;
import java.sql.SQLException;
import java.util.List;
import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPubSub;


public class RunPlayerParser implements Runnable {
  @Override
  public void run() {

    System.out.println("Start runAppProducerPlayer");
    try (Jedis jedis = new Jedis("redis", 6379)) {
      // Define a new JedisPubSub instance to handle messages
      JedisPubSub pubSub = new JedisPubSub() {
        @Override
        public void onMessage(String channel, String message) {
          System.out.println("Received message from channel " + channel + ": " + message);

          System.out.println("avant le consumer player");
          String filename = "./data/players_list_xml_foa.xml";

          System.out.println("AppProducerPlayer::Start to parse:" + filename);
          manageFile(filename);
        }
      };

      jedis.subscribe(pubSub, Topic.TOPIC_PLAYER);
    }
    ;

  }

  /**
   * @param filedir ex "data/players_list_xml_foa.xml"
   */
  private void manageFile(String filedir) {

    CommonPlayerDao commonPlayerDao = new CommonPlayerDao();
    System.out.println("managerFile " + filedir);
    PlayerParser playerParser = new PlayerParser();
    List<CommonPlayer> players = playerParser.parse(filedir);
    System.out.println("after parse players done: "+players.size());
    long id = 1L;
    for (CommonPlayer player : players) {

      player.setId(id++);
      if (id%5000==0){
        System.out.println("players inserted: " + id);
      }
      try {
        commonPlayerDao.insertCommonPlayer(player);
      } catch (SQLException|ClassNotFoundException e) {
        System.out.println("players insertion out: " + players.size());
        throw new RuntimeException(e);
      }
    }
    System.out.println("players inserted: " + players.size());

  }

}
